apiVersion: apps/v1
kind: Deployment
metadata:
  name: cluster-monitoring-operator
  namespace: openshift-monitoring
  labels:
    app: cluster-monitoring-operator
    app.kubernetes.io/name: cluster-monitoring-operator
  annotations:
    include.release.openshift.io/self-managed-high-availability: "true"
    include.release.openshift.io/single-node-developer: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cluster-monitoring-operator
  template:
    metadata:
      labels:
        app: cluster-monitoring-operator
        app.kubernetes.io/name: cluster-monitoring-operator
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    spec:
      serviceAccountName: cluster-monitoring-operator
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/master: ""
      priorityClassName: "system-cluster-critical"
      tolerations:
      - key: "node.kubernetes.io/memory-pressure"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node-role.kubernetes.io/master"
        operator: "Exists"
        effect: "NoSchedule"
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 120
      volumes:
      - name: telemetry-config
        configMap:
          name: telemetry-config
      - name: cluster-monitoring-operator-tls
        secret:
          secretName: cluster-monitoring-operator-tls
      containers:
      - args:
        - "-namespace=openshift-monitoring"
        - "-namespace-user-workload=openshift-user-workload-monitoring"
        - "-configmap=cluster-monitoring-config"
        - "-release-version=$(RELEASE_VERSION)"
        - "-logtostderr=true"
        - "-v=2"
        - "-cert-file=/etc/tls/private/tls.crt"
        - "-key-file=/etc/tls/private/tls.key"
        - "-images=prometheus-operator=quay.io/openshift/origin-prometheus-operator:latest"
        - "-images=prometheus-config-reloader=quay.io/openshift/origin-prometheus-config-reloader:latest"
        - "-images=prometheus-operator-admission-webhook=quay.io/openshift/origin-prometheus-operator-admission-webhook:latest"
        - "-images=configmap-reloader=quay.io/openshift/origin-configmap-reloader:latest"
        - "-images=prometheus=quay.io/openshift/origin-prometheus:latest"
        - "-images=alertmanager=quay.io/openshift/origin-prometheus-alertmanager:latest"
        - "-images=oauth-proxy=quay.io/openshift/origin-oauth-proxy:latest"
        - "-images=node-exporter=quay.io/openshift/origin-prometheus-node-exporter:latest"
        - "-images=kube-state-metrics=quay.io/openshift/origin-kube-state-metrics:latest"
        - "-images=openshift-state-metrics=quay.io/openshift/origin-openshift-state-metrics:latest"
        - "-images=kube-rbac-proxy=quay.io/openshift/origin-kube-rbac-proxy:latest"
        - "-images=telemeter-client=quay.io/openshift/origin-telemeter:latest"
        - "-images=prom-label-proxy=quay.io/openshift/origin-prom-label-proxy:latest"
        - "-images=k8s-prometheus-adapter=quay.io/openshift/origin-k8s-prometheus-adapter:latest"
        - "-images=thanos=quay.io/openshift/origin-thanos:latest"
        - "-images=monitoring-plugin=quay.io/openshift/origin-monitoring-plugin:latest"
        - "-images=kube-metrics-server=quay.io/openshift/origin-kube-metrics-server:latest"
        env:
        - name: RELEASE_VERSION
          value: "0.0.1-snapshot"
        # Inject the pod's name using the downward API to generate Kubernetes
        # events with the correct object reference.
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: quay.io/openshift/origin-cluster-monitoring-operator:latest
        name: cluster-monitoring-operator
        ports:
        - containerPort: 8443
          name: https
        resources:
          requests:
            cpu: 10m
            memory: 75Mi
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/tls/private
          name: cluster-monitoring-operator-tls
          readOnly: true
        - mountPath: /etc/cluster-monitoring-operator/telemetry
          name: telemetry-config
          readOnly: true
